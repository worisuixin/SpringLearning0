<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="userService" name="service,service2" class="com.itbaima.service.impl.UserServiceImpl" init-method="init" destroy-method="destroy">
        <property name="userDao" ref="userDao"></property>    <!--DI,依赖注入-->
<!--        这里这个name就是userService里面set之后的名字，这个ref就是下面使用的那个类的id，两个意思不一样-->
<!--   DI依赖注入基本操作   同时，这里就是去注入一个类，不用去手动创建，而是在这个依赖文件里面去注入，将这个userDao对象直接注入到这个类里面-->
<!--        同理这里后面的init和destory-method就是对初始化和销毁之后方法的设置-->
    </bean>
<!--    这个class就是导入这个类的全限定名字，这个id就是唯一标识，用来使用这个类, 且这个id要唯一-->
<!--    这里这个id是作为唯一标识，但当传入到getbean时，其实这个是会转换为beanname的-->
<!--    这里这个name就是别名，之后的get就可以通过这个进行获取bean，且可以多个别名。但到最后其实找的还是这个id，这里有点语法糖的感觉-->
    <bean id="userDao" class="com.itbaima.dao.impl.UserDaoImpl" lazy-init="true"></bean>
<!--    这里设置为延迟加载之后，就不会在创建Spring容器时，立即创建Bean实例，等到用时才会去-->


    <bean id="myBeanFactory1" class="com.itbaima.factory.MyBeanFactory1"></bean>
    <bean id="myBeanUserDao" factory-bean="myBeanFactory1" factory-method="getUserDao"></bean>
<!--上面这两行就是使用实例工厂方法去实例化bean。既然是实例工厂，所以得先有实例工厂，即第一行用来配置实例工厂，第二行用来使用实例工厂的方法来实例化对象-->
</beans>